# cf_tf
## Introduction
cf_tf_ is a [ROS](http://ros.org) package to read the position in [cob_fiducials](http://wiki.ros.org/cob_fiducials) and send it to crazyflie_driver to control a [Bitcraze Crazyflie](http://wiki.ros.org/crazyflie).

* Authors: [Xavier Gisbert Beguer](xavigisbeg@gmail.com), [ETIT TU-Darmstadt](http://www.etit.tu-darmstadt.de/fachbereich/)


## Dependencies
The software needed is ROS Indigo and the following packages:

* cob_object_perception_ 
* cob_perception_common
* crazyflie_ros

The dependencies of those individual packages are not written here, and should be installed using "rosdep install" o downloaded in the workspace after checking them with "rosdep check"

## Hardware
The minimum devices needed to use the cf_tf package are:

* Computer with Ubuntu 14.04 and ROS Indigo
* External or internal camera for the computer
* Crazyflie (2.0) 
* Crazyradio (PA)
* Custom frames to put the markers in the Crazyflies

The software is tested with Crazyflie 2.0 and Crazyradio PA. Other models may run but are not supported in this moment.

## Extra installation info to ROS newcomers

After downloading or cloning the mentioned packages, probably the user's system does not have all the packages or libraries that all the packages need. This will result in failures when doing "catkin_make" or "catkin build". 
To solve this, there are two possibilities.

* Install the packages in the root partition where ROS is installed (/opt/share/...) executing the command "sudo rosdep install --from-paths /path/to/catkin_ws/src --ignore-src" in the terminal. If it does not install succesfully a dependency you can try to install or update them in the root manually or follow the next step.

* Check the dependencies executing "rosdep install --from-paths /path/to/catkin_ws/src --ignore-src" and download the packages you need to your workspace. This gives you flexibility to change files in those packages without permission problems. 

In any case, you should be able to include in your own package the special files of other packages that you will modify. This is specially the case of configuration yaml files. 

Ideally you should adapt your code to be used along the other packages without any modifications in them, therefore your code will work for other users out of the box, and will benefit of the development and mantainance of those packages. 

Remember also to source your workspace in the ~/.bashrc file.
